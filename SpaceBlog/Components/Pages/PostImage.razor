@rendermode InteractiveServer
@using System.Text.Json
@using System.Text.Json.Serialization
@inject HttpClient Client
@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@inject IWebHostEnvironment Environment

@page "/edit"

<PageTitle>Adicionar Publicação - SpaceBlog</PageTitle>

<div class="content-post-image">

	<h3>Adicionar publicação</h3>

	<div class="post-image-form">
		<InputFile OnChange="LoadFile" />
		<input />
		<button class="sb-btn">Enviar</button>
	</div>

</div>

@code {
	private List<IBrowserFile> loadedFiles = new();
	private long maxFileSize = 1024 * 150;
	private bool isLoading;

	private async Task LoadFile(InputFileChangeEventArgs e)
	{
		isLoading = true;
		loadedFiles.Clear();

		try
		{
			var file = e.GetMultipleFiles(1)[0];
			var trustedFileName = Path.GetRandomFileName();
			var path = Path.Combine(Environment.ContentRootPath, Environment.EnvironmentName, "unsafe_uploads", trustedFileName);

			await using FileStream fs = new(path, FileMode.Create);
			await file.OpenReadStream(maxFileSize).CopyToAsync(fs);

			loadedFiles.Add(file);
			Console.WriteLine(loadedFiles[0]);
			Console.WriteLine("chamou");
			// Logger.LogInformation(
			// 		"Unsafe Filename: {UnsafeFilename} File saved: {Filename}",
			// 		file.Name, trustedFileName);

		} catch (Exception exc)
		{
			Console.WriteLine("Opa");
			Console.WriteLine(exc);
		}
		isLoading = false;
	}

	protected override async Task OnInitializedAsync()
	{
		string response = 
			await Client.GetStringAsync("https://localhost:7014/HelloWorld");
		Console.WriteLine(response);
	}
}
