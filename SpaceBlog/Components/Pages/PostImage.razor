@rendermode InteractiveServer
@using System.Text.Json
@using System.Text.Json.Serialization
@inject HttpClient Client
@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@using System.Text
@inject IWebHostEnvironment Environment

@page "/edit"

<PageTitle>Adicionar Publicação - SpaceBlog</PageTitle>

<div class="content-post-image">

	<h3>Adicionar publicação</h3>

	<form method="post" @onsubmit="AddPost" @formname="add-picture-form" class="post-image-form">

		<InputFile required OnChange="LoadFile" />
		
		<input type="text" required @bind-value="PostText" />
		
		<button class="sb-btn" type="submit" @onclick="AddPost">Enviar</button>
	
	</form>

	@if (isLoading)
	{
		<p>Loading...</p>
	}

</div>

@code {
	string? PostText;
	private IBrowserFile? loadedFile;
	private long maxFileSize = 1024 * 150;
	private bool isLoading;
	MultipartFormDataContent content = new();

	private async Task LoadFile(InputFileChangeEventArgs e)
	{
		isLoading = true;
		loadedFile = null;

		try
		{
			var file = e.GetMultipleFiles(1)[0];
			var trustedFileName = Path.GetRandomFileName();
			var path = Path.Combine(
				Environment.ContentRootPath,
				Environment.EnvironmentName,
				"unsafe_uploads",
				trustedFileName
			);

			await using FileStream fs = new(path, FileMode.Create);
			await file.OpenReadStream(maxFileSize).CopyToAsync(fs);

			loadedFile = file;
			var fileContent =
						new StreamContent(file.OpenReadStream(maxFileSize));

			content.Add(
						content: fileContent,
						name: "\"files\"",
						fileName: file.Name);
		}
		catch (Exception exc)
		{
			Console.WriteLine(exc);
		}
		isLoading = false;
	}

	protected override async Task OnInitializedAsync()
	{
		string response =
			await Client.GetStringAsync("https://localhost:7014/Post");
	}

	public async Task AddPost()
	{
		using StringContent jsonContent = new(
			JsonSerializer.Serialize(new { Text = PostText }),
				Encoding.UTF8,
				"application/json"
		);

		if (loadedFile is not null || !string.IsNullOrEmpty(PostText))
		{
			await Client.PostAsync(
				"https://localhost:7014/Post",
				jsonContent
			);
			await Client.PostAsync(
				"https://localhost:7014/Post/AddFile?id=0",
				new StreamContent(loadedFile!.OpenReadStream())
			);
		} 
		else
		{
			Console.WriteLine("Formulário inválido!");
		}
	}
}
